<templates xml:space="preserve">
    <t t-name="hr_analytics_dashboard.NumberCard">
        <div class="number-card" 
             t-att-style="'background: linear-gradient(135deg, ' + (props.color || '#6366f1') + ', ' + (props.color || '#6366f1') + '20); border: none; border-radius: 16px; padding: 24px; color: white; cursor: pointer; transition: all 0.3s ease; box-shadow: 0 4px 20px rgba(0,0,0,0.1);'"
             t-on-click="props.onClick">
            <div style="display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 16px;">
                <div class="card-title" style="font-size: 14px; font-weight: 500; opacity: 0.9;">
                    <t t-esc="props.title"/>
                </div>
                <div t-if="props.icon" class="card-icon" 
                     t-att-style="'font-size: 24px; opacity: 0.8;'">
                    <t t-esc="props.icon"/>
                </div>
            </div>
            <div class="card-value" style="font-size: 32px; font-weight: 700; line-height: 1;">
                <t t-esc="props.value"/>
            </div>
        </div>
    </t>

    <t t-name="hr_analytics_dashboard.FilterSection">
        <div class="filter-section" style="background: white; padding: 16px 20px; border-radius: 16px; box-shadow: 0 2px 10px rgba(0,0,0,0.08); margin-bottom: 24px;">
            <div style="display: flex; flex-direction: column; gap: 16px;">
                <div style="font-weight: 600; color: #374151; display: flex; align-items: center;">
                    <i class="fa fa-filter" style="margin-right: 8px;"></i>Bộ lọc
                </div>
                
                <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 16px;">
                    <div style="display: flex; flex-direction: column; gap: 4px;">
                        <label style="font-size: 12px; color: #6b7280; font-weight: 500;">Phòng ban</label>
                        <select style="padding: 10px 12px; border: 1px solid #d1d5db; border-radius: 8px; font-size: 14px; width: 100%;"
                                t-on-change="(ev) => props.onFilterChange('department_id', ev.target.value || null)">
                            <option value="">Tất cả phòng ban</option>
                            <t t-foreach="props.departments" t-as="dept" t-key="dept.id">
                                <option t-att-value="dept.id" t-att-selected="dept.id == props.selectedDepartment">
                                    <t t-esc="dept.name"/>
                                </option>
                            </t>
                        </select>
                    </div>

                    <div style="display: flex; flex-direction: column; gap: 4px;">
                        <label style="font-size: 12px; color: #6b7280; font-weight: 500;">Từ ngày</label>
                        <input type="date" 
                               style="padding: 10px 12px; border: 1px solid #d1d5db; border-radius: 8px; font-size: 14px; width: 100%;"
                               t-att-value="props.startDate"
                               t-on-change="(ev) => props.onFilterChange('start_date', ev.target.value)"/>
                    </div>

                    <div style="display: flex; flex-direction: column; gap: 4px;">
                        <label style="font-size: 12px; color: #6b7280; font-weight: 500;">Đến ngày</label>
                        <input type="date" 
                               style="padding: 10px 12px; border: 1px solid #d1d5db; border-radius: 8px; font-size: 14px; width: 100%;"
                               t-att-value="props.endDate"
                               t-on-change="(ev) => props.onFilterChange('end_date', ev.target.value)"/>
                    </div>
                </div>
            </div>
        </div>
    </t>

    <t t-name="hr_analytics_dashboard.ChartRenderer">
        <div class="chart-container" style="background: white; padding: 24px; border-radius: 16px; box-shadow: 0 2px 10px rgba(0,0,0,0.08);">
            <canvas t-ref="chart" style="height: 350px; width: 100%;"></canvas>
        </div>
    </t>

    <t t-name="hr_analytics_dashboard.Dashboard">
        <div class="o_hr_dashboard" style="background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%); min-height: 100vh; height: 100vh; overflow-y: auto; overflow-x: hidden; -webkit-overflow-scrolling: touch;">
            <div style="padding: 20px 16px; max-width: 1400px; margin: 0 auto; min-height: calc(100vh - 40px);">
                <!-- Header -->
                <div style="margin-bottom: 24px; text-align: center; position: relative;">
                    <h1 style="font-size: clamp(24px, 5vw, 36px); font-weight: 800; color: #1f2937; margin-bottom: 8px; background: linear-gradient(135deg, #6366f1, #8b5cf6); -webkit-background-clip: text; -webkit-text-fill-color: transparent;">
                        HR Analytics Dashboard
                    </h1>
                    <p style="color: #6b7280; font-size: clamp(14px, 3vw, 16px); margin: 0;">Thống kê và phân tích nhân sự toàn diện</p>
                    
                    <!-- Real-time Controls -->
                    <div class="realtime-controls" style="position: absolute; top: 0; right: 0; display: flex; align-items: center; gap: 12px;">
                        <!-- Last Updated -->
                        <div t-if="state.lastUpdated" style="display: flex; flex-direction: column; align-items: flex-end; font-size: 12px; color: #6b7280;">
                            <span style="font-weight: 500;">Cập nhật lần cuối:</span>
                            <span t-esc="state.lastUpdated.toLocaleTimeString('vi-VN')"></span>
                        </div>
                        
                        <!-- Real-time Status -->
                        <div style="display: flex; align-items: center; gap: 8px; padding: 8px 12px; background: white; border-radius: 10px; box-shadow: 0 2px 8px rgba(0,0,0,0.1);">
                            <div t-if="state.isRefreshing" style="display: flex; align-items: center; gap: 6px; color: #3b82f6;">
                                <i class="fa fa-spinner fa-spin" style="font-size: 12px;"></i>
                                <span style="font-size: 12px; font-weight: 500;">Đang cập nhật...</span>
                            </div>
                            <div t-else="" style="display: flex; align-items: center; gap: 6px;">
                                <div t-if="state.autoRefresh" style="width: 8px; height: 8px; background: #10b981; border-radius: 50%; animation: pulse 2s infinite;"></div>
                                <div t-else="" style="width: 8px; height: 8px; background: #6b7280; border-radius: 50%;"></div>
                                <span t-if="state.autoRefresh" style="font-size: 12px; font-weight: 500; color: #10b981;">Live</span>
                                <span t-else="" style="font-size: 12px; font-weight: 500; color: #6b7280;">Manual</span>
                            </div>
                        </div>
                        
                        <!-- Control Buttons -->
                        <div style="display: flex; gap: 8px;">
                            <!-- Manual Refresh Button -->
                            <button style="background: #f3f4f6; color: #374151; border: none; border-radius: 10px; padding: 10px; cursor: pointer; transition: all 0.3s ease; display: flex; align-items: center; justify-content: center;"
                                    t-on-click="() => this.manualRefresh()"
                                    onmouseover="this.style.background='#e5e7eb'"
                                    onmouseout="this.style.background='#f3f4f6'"
                                    title="Làm mới ngay">
                                <i class="fa fa-refresh" style="font-size: 14px;"></i>
                            </button>
                            
                            <!-- Auto-refresh Toggle -->
                            <button t-att-style="'background: ' + (state.autoRefresh ? '#10b981' : '#6b7280') + '; color: white; border: none; border-radius: 10px; padding: 10px; cursor: pointer; transition: all 0.3s ease; display: flex; align-items: center; justify-content: center;'"
                                    t-on-click="() => this.toggleAutoRefresh()"
                                    t-att-title="state.autoRefresh ? 'Tắt cập nhật tự động' : 'Bật cập nhật tự động'">
                                <i t-att-class="'fa fa-' + (state.autoRefresh ? 'pause' : 'play')" style="font-size: 14px;"></i>
                            </button>
                            
                            <!-- Export PDF Button -->
                            <button class="export-pdf-btn" 
                                    style="background: linear-gradient(135deg, #6366f1, #8b5cf6); color: white; border: none; border-radius: 10px; padding: 10px 16px; font-size: 12px; font-weight: 600; cursor: pointer; display: flex; align-items: center; gap: 6px; box-shadow: 0 4px 12px rgba(99, 102, 241, 0.3); transition: all 0.3s ease;"
                                    t-on-click="() => this.exportToPDF()"
                                    onmouseover="this.style.transform='translateY(-2px)'; this.style.boxShadow='0 6px 20px rgba(99, 102, 241, 0.4)'"
                                    onmouseout="this.style.transform='translateY(0)'; this.style.boxShadow='0 4px 12px rgba(99, 102, 241, 0.3)'"
                                    title="Xuất PDF">
                                <i class="fa fa-file-pdf-o" style="font-size: 14px;"></i>
                                <span style="font-size: 12px;">PDF</span>
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Loading State -->
                <div t-if="state.loading" style="text-align: center; padding: 80px 20px;">
                    <div style="display: inline-block; width: 50px; height: 50px; border: 4px solid #e5e7eb; border-top: 4px solid #6366f1; border-radius: 50%; animation: spin 1s linear infinite;"></div>
                    <p style="margin-top: 16px; color: #6b7280; font-size: 16px;">Đang tải dữ liệu...</p>
                </div>

                <!-- Error State -->
                <div t-if="state.error" style="background: #fef2f2; border: 1px solid #fecaca; color: #dc2626; padding: 16px; border-radius: 12px; margin-bottom: 24px; text-align: center;">
                    <i class="fa fa-exclamation-triangle" style="margin-right: 8px;"></i>
                    <t t-esc="state.error"/>
                </div>

                <!-- Main Content -->
                <div t-if="!state.loading and !state.error">
                    <!-- Filters -->
                    <FilterSection 
                        departments="state.departments"
                        selectedDepartment="state.filters.department_id"
                        startDate="state.filters.start_date"
                        endDate="state.filters.end_date"
                        onFilterChange="(type, value) => this.onFilterChange(type, value)"/>

                    <!-- KPI Cards -->
                    <div class="kpi-cards-grid" style="display: grid; grid-template-columns: repeat(4, 1fr); gap: 20px; margin-bottom: 24px;">
                        <NumberCard 
                            title="'Tổng nhân viên'" 
                            value="state.data.total_employees || 0"
                            icon="'👥'"
                            color="'#6366f1'"
                            onClick="() => this.onEmployeesClick()"/>
                        
                        <NumberCard 
                            title="'Tỷ lệ nghỉ việc (%)'" 
                            value="(state.data.turnover_rate || 0).toFixed(1) + '%'"
                            icon="'📈'"
                            color="'#ef4444'"
                            onClick="() => this.onAttendanceClick()"/>
                        
                        <NumberCard 
                            title="'Lương trung bình'" 
                            value="((state.data.avg_salary || 0) / 1000000).toFixed(1) + 'M'"
                            icon="'💰'"
                            color="'#10b981'"
                            onClick="() => this.onPayrollClick()"/>
                        
                        <NumberCard 
                            title="'KPI trung bình'" 
                            value="(state.data.kpi_average || 0).toFixed(1)"
                            icon="'⭐'"
                            color="'#f59e0b'"/>
                    </div>

                    <!-- Charts Grid -->
                    <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(350px, 1fr)); gap: 24px; margin-bottom: 32px;">
                        <!-- Attendance Chart -->
                        <div>
                            <h3 style="font-size: clamp(16px, 4vw, 20px); font-weight: 600; color: #374151; margin-bottom: 16px; display: flex; align-items: center;">
                                <i class="fa fa-clock-o" style="margin-right: 8px; color: #6366f1;"></i>
                                Thống kê giờ làm theo ngày
                            </h3>
                            <ChartRenderer 
                                type="'line'" 
                                data="attendanceChartData"
                                options="chartOptions"/>
                        </div>

                        <!-- KPI Distribution -->
                        <div>
                            <h3 style="font-size: clamp(16px, 4vw, 20px); font-weight: 600; color: #374151; margin-bottom: 16px; display: flex; align-items: center;">
                                <i class="fa fa-bar-chart" style="margin-right: 8px; color: #8b5cf6;"></i>
                                Phân phối KPI nhân viên
                            </h3>
                            <ChartRenderer 
                                type="'bar'" 
                                data="kpiDistributionData"
                                options="chartOptions"/>
                        </div>
                    </div>

                    <!-- Salary Distribution - Full Width -->
                    <div style="margin-bottom: 40px;">
                        <h3 style="font-size: clamp(16px, 4vw, 20px); font-weight: 600; color: #374151; margin-bottom: 16px; display: flex; align-items: center;">
                            <i class="fa fa-pie-chart" style="margin-right: 8px; color: #10b981;"></i>
                            Phân bổ lương theo phòng ban (triệu VND)
                        </h3>
                        <div style="max-width: 600px; margin: 0 auto;">
                            <ChartRenderer 
                                type="'pie'" 
                                data="salaryDistributionData"
                                options="pieChartOptions"/>
                        </div>
                    </div>
                </div>

                <!-- Footer -->
                <div style="text-align: center; margin-top: 24px; padding: 24px 0; border-top: 1px solid #e5e7eb;">
                    <p style="color: #9ca3af; font-size: 14px;">
                        © 2025 HR Analytics Dashboard - Cập nhật thời gian thực
                    </p>
                </div>
            </div>
        </div>
        
        <!-- CSS Animation + Mobile Responsive -->
        <style>
            @keyframes spin {
                0% { transform: rotate(0deg); }
                100% { transform: rotate(360deg); }
            }
            @keyframes pulse {
                0%, 100% { opacity: 1; }
                50% { opacity: 0.5; }
            }
            .number-card:hover {
                transform: translateY(-4px) !important;
                box-shadow: 0 8px 30px rgba(0,0,0,0.15) !important;
            }
            .chart-container:hover {
                box-shadow: 0 4px 20px rgba(0,0,0,0.12) !important;
            }
            
            /* Mobile Responsive */
            @media (max-width: 768px) {
                .o_hr_dashboard {
                    padding: 12px 8px !important;
                }
                .number-card {
                    padding: 16px !important;
                }
                .filter-section {
                    padding: 12px 16px !important;
                }
                .chart-container {
                    padding: 16px !important;
                }
                /* Ensure proper touch scrolling on iOS */
                .o_hr_dashboard {
                    -webkit-overflow-scrolling: touch;
                    overscroll-behavior: contain;
                }
                /* Responsive NumberCard grid */
                .kpi-cards-grid {
                    grid-template-columns: repeat(2, 1fr) !important;
                    gap: 16px !important;
                }
                /* Mobile Real-time Controls */
                .realtime-controls {
                    position: relative !important;
                    top: auto !important;
                    right: auto !important;
                    margin: 16px auto 0 auto !important;
                    justify-content: center !important;
                    flex-wrap: wrap !important;
                    gap: 8px !important;
                }
                .realtime-controls > div {
                    font-size: 10px !important;
                }
                .realtime-controls button {
                    padding: 8px !important;
                    font-size: 10px !important;
                }
            }
            
            @media (max-width: 480px) {
                .o_hr_dashboard {
                    padding: 8px 4px !important;
                }
                /* Stack NumberCards on very small screens */
                .kpi-cards-grid {
                    grid-template-columns: 1fr !important;
                    gap: 12px !important;
                }
                /* Very small mobile Real-time Controls */
                .realtime-controls {
                    flex-direction: column !important;
                    gap: 6px !important;
                }
                .realtime-controls button {
                    padding: 6px !important;
                    font-size: 9px !important;
                }
            }
        </style>
    </t>
</templates>
